{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\uygulama\\\\onlinefood-customer-app-frontend\\\\src\\\\components\\\\onlinefood\\\\Login.js\";\nimport React from 'react';\nimport { Component } from \"react\";\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport AppBar from 'material-ui/AppBar';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport TextField from 'material-ui/TextField';\nimport AuthenticationService from \"./AuthenticationService\";\nimport MealDataService from \"../../api/MealDataService\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.tokenCheck = () => {\n      const cookies = new Cookies();\n\n      if (cookies.get('rememberlogin') != null) {\n        // bu kısımda cookie kontrolu yapıyor varsa alıyor\n        AuthenticationService.refreshJwtAuthentication(cookies.get('rememberlogin')) // token geçerlimi kontrolu\n        .then(response => {\n          AuthenticationService.registerSuccessfullLoginJwt(cookies.get('userN'), cookies.get('rememberlogin'));\n          this.props.history.push(`/`);\n        }).catch(error => {\n          // token geçerli değilse login sayfasına git\n          console.log(\"FAILED\");\n          AuthenticationService.logout();\n          this.props.history.push(`/login`);\n        }); // this.props.history.push(`/`);\n      }\n    };\n\n    this.rememberChanges = () => {\n      this.setState({\n        remember: true\n      });\n    };\n\n    this.state = {\n      username: \"test\",\n      password: \"\",\n      remember: \"false\",\n      isLoggedIn: null\n    };\n  }\n\n  // componentDidMount() {\n  //     this.refreshLoginPage()\n  // };\n  //\n  // refreshLoginPage = () => {\n  //     AuthenticationService.registerSuccessfullLogin(username, password)\n  //         .then(response => {\n  //             this.setState({selectableMeals: response.data});\n  //         })\n  // };\n  render() {\n    return React.createElement(MuiThemeProvider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(AppBar, {\n      title: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      hintText: \"Enter your Username\",\n      floatingLabelText: \"Username\",\n      onChange: (event, newValue) => this.setState({\n        username: newValue\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      type: \"password\",\n      hintText: \"Enter your Password\",\n      floatingLabelText: \"Password\",\n      onChange: (event, newValue) => this.setState({\n        password: newValue\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"remember\",\n      value: this.state.remember,\n      onChange: this.rememberChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), \" Remember me\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(RaisedButton, {\n      label: \"Log In\",\n      primary: true,\n      style: style,\n      onClick: event => this.loginClicked(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })));\n  }\n\n  loginClicked(event) {\n    AuthenticationService.executeJwtAuthentication(this.state.username, this.state.password).then(response => {\n      AuthenticationService.registerSuccessfullLoginJwt(this.state.username, response.data.token, this.state.password, this.state.remember);\n      this.props.history.push(`/main/${this.state.username}`);\n    }).catch(error => {\n      this.setState({\n        isLoggedIn: false\n      });\n      console.log(\"FAILED\");\n    });\n  }\n\n}\n\nconst style = {\n  margin: 15\n};\nexport default Login;","map":{"version":3,"sources":["C:/Users/Asus/Desktop/uygulama/onlinefood-customer-app-frontend/src/components/onlinefood/Login.js"],"names":["React","Component","MuiThemeProvider","AppBar","RaisedButton","TextField","AuthenticationService","MealDataService","Login","constructor","props","tokenCheck","cookies","Cookies","get","refreshJwtAuthentication","then","response","registerSuccessfullLoginJwt","history","push","catch","error","console","log","logout","rememberChanges","setState","remember","state","username","password","isLoggedIn","render","event","newValue","style","loginClicked","executeJwtAuthentication","data","token","margin"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport {Component} from \"react\";\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport AppBar from 'material-ui/AppBar';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport TextField from 'material-ui/TextField';\nimport AuthenticationService from \"./AuthenticationService\";\nimport MealDataService from \"../../api/MealDataService\";\nclass Login extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            username: \"test\",\n            password: \"\",\n            remember: \"false\",\n            isLoggedIn: null\n        };\n    }\n\n    tokenCheck = () => {\n\n        const cookies = new Cookies();\n        if (cookies.get('rememberlogin') != null) { // bu kısımda cookie kontrolu yapıyor varsa alıyor\n            AuthenticationService.refreshJwtAuthentication(cookies.get('rememberlogin')) // token geçerlimi kontrolu\n                .then(response => {\n                    AuthenticationService.registerSuccessfullLoginJwt(cookies.get('userN'), cookies.get('rememberlogin'))\n                    this.props.history.push(`/`);\n                })\n                .catch(error => { // token geçerli değilse login sayfasına git\n                    console.log(\"FAILED\");\n                    AuthenticationService.logout();\n                    this.props.history.push(`/login`);\n                });\n            // this.props.history.push(`/`);\n        }\n\n    };\n\n    // componentDidMount() {\n    //     this.refreshLoginPage()\n    // };\n    //\n    // refreshLoginPage = () => {\n    //     AuthenticationService.registerSuccessfullLogin(username, password)\n    //         .then(response => {\n    //             this.setState({selectableMeals: response.data});\n    //         })\n    // };\n\n    render() {\n        return (\n                <MuiThemeProvider>\n                    <div>\n                        <AppBar\n                            title=\"Login\"\n                        />\n                        <TextField\n                            hintText=\"Enter your Username\"\n                            floatingLabelText=\"Username\"\n                            onChange = {(event,newValue) => this.setState({username:newValue})}\n                        />\n                        <br/>\n                        <TextField\n                            type=\"password\"\n                            hintText=\"Enter your Password\"\n                            floatingLabelText=\"Password\"\n                            onChange = {(event,newValue) => this.setState({password:newValue})}\n                        />\n                        <br/>\n\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"checkbox\" name=\"remember\"\n                               value={this.state.remember}\n                               onChange={this.rememberChanges}/> Remember me\n                    </div>\n                    <div>\n                        <RaisedButton label=\"Log In\" primary={true} style={style} onClick={(event) => this.loginClicked(event)}/>\n                    </div>\n                </MuiThemeProvider>\n        );\n    }\n\n    rememberChanges = () => {\n        this.setState({remember: true});\n    };\n\n    loginClicked(event) {\n        AuthenticationService.executeJwtAuthentication(this.state.username, this.state.password)\n            .then(response => {\n                AuthenticationService.registerSuccessfullLoginJwt(this.state.username, response.data.token, this.state.password, this.state.remember);\n                this.props.history.push(`/main/${this.state.username}`);\n            })\n            .catch(error => {\n                this.setState({isLoggedIn: false});\n                console.log(\"FAILED\");\n            })\n    }\n}\nconst style = {\n    margin: 15,\n};\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}