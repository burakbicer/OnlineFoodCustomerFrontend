{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\uygulama\\\\customer-app-fe\\\\src\\\\components\\\\onlinefood\\\\MealComponent.js\";\nimport React, { Component } from 'react';\nimport moment from \"moment\";\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport MealDataService from \"../../api/MealDataService\";\n\nclass MealComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = values => {\n      console.log(values);\n\n      if (this.state.action === 'update') {\n        MealDataService.updateMeal(this.state.meal.code, values).then(response => {\n          this.props.history.push(`/meallist`);\n        });\n      } else {\n        MealDataService.createMeal(values).then(response => {\n          this.props.history.push(`/meallist`);\n        });\n      }\n    };\n\n    this.componentDidMount = () => {\n      if (this.props.match.params.code === \"new\") {\n        this.setState({\n          action: 'create'\n        });\n        return;\n      }\n\n      MealDataService.retrieveMeal(this.props.match.params.code).then(response => {\n        console.log(response);\n        this.setState({\n          meal: response.data\n        });\n      });\n    };\n\n    this.state = {\n      /* meal : {code: this.props.match.params.code, name: 'Mantı', price: 12, photo: 'text', detail: 'Süper bi yemek!',\n               creationDate: moment(new Date()).format('YYYY-MM-DD')}*/\n      meal: {\n        code: '',\n        name: '',\n        price: '',\n        photo: '',\n        detail: '',\n        campaign: '',\n        creationDate: moment(new Date()).format('YYYY-MM-DD')\n      },\n      action: 'update'\n    };\n  }\n\n  validate(values) {\n    let errors = {};\n    if (!values.code) errors.code = 'Enter a meal code!';else if (values.code.length < 3) errors.code = 'Enter at least 3 characters into code!';\n    if (!values.name) errors.name = 'Enter a meal name!';else if (values.name.length < 2) errors.name = 'Enter at least 2 characters into name!';\n    const re = /^[0-9\\b]+$/;\n    if (!values.price) errors.price = 'Enter a meal price!';else if (values.price === '' || !re.test(values.price)) errors.price = 'Enter only numbers into price!';\n    if (!moment(values.creationDate).isValid()) errors.creationDate = 'Enter a valid date!';\n    return errors;\n  }\n\n  render() {\n    let _this$state$meal = this.state.meal,\n        code = _this$state$meal.code,\n        name = _this$state$meal.name,\n        price = _this$state$meal.price,\n        photo = _this$state$meal.photo,\n        detail = _this$state$meal.detail,\n        campaign = _this$state$meal.campaign,\n        creationDate = _this$state$meal.creationDate;\n\n    function setFieldValue(checked) {\n      campaign = checked;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Meal\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Formik, {\n      onSubmit: this.onSubmit,\n      validate: this.validate,\n      initialValues: {\n        code,\n        name,\n        price,\n        photo,\n        detail,\n        campaign,\n        creationDate\n      },\n      enableReinitialize: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, props => React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(ErrorMessage, {\n      name: \"code\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"name\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"price\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"creationDate\",\n      component: \"div\",\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Code\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"code\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Name\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Price\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Photo\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"photo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Detail\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"detail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Creation Date\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"date\",\n      name: \"creationDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Campaign?\"), React.createElement(Field, {\n      className: \"form-control\",\n      type: \"checkbox\",\n      name: \"campaign\",\n      onChange: event => setFieldValue(event.target.checked),\n      checked: campaign,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Save\")))));\n  }\n\n}\n\nexport default MealComponent;","map":{"version":3,"sources":["C:/Users/Asus/Desktop/uygulama/customer-app-fe/src/components/onlinefood/MealComponent.js"],"names":["React","Component","moment","ErrorMessage","Field","Form","Formik","MealDataService","MealComponent","constructor","props","onSubmit","values","console","log","state","action","updateMeal","meal","code","then","response","history","push","createMeal","componentDidMount","match","params","setState","retrieveMeal","data","name","price","photo","detail","campaign","creationDate","Date","format","validate","errors","length","re","test","isValid","render","setFieldValue","checked","event","target"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport moment from \"moment\";\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\nimport MealDataService from \"../../api/MealDataService\";\n\nclass MealComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            /* meal : {code: this.props.match.params.code, name: 'Mantı', price: 12, photo: 'text', detail: 'Süper bi yemek!',\n                     creationDate: moment(new Date()).format('YYYY-MM-DD')}*/\n            meal: {\n                code: '',\n                name: '',\n                price: '',\n                photo: '',\n                detail: '',\n                campaign: '',\n                creationDate: moment(new Date()).format('YYYY-MM-DD')\n            },\n            action: 'update'\n        }\n    }\n\n    validate(values) {\n        let errors = {};\n\n        if (!values.code)\n            errors.code = 'Enter a meal code!';\n        else if (values.code.length < 3)\n            errors.code = 'Enter at least 3 characters into code!';\n\n        if (!values.name)\n            errors.name = 'Enter a meal name!';\n        else if (values.name.length < 2)\n            errors.name = 'Enter at least 2 characters into name!';\n\n        const re = /^[0-9\\b]+$/;\n        if (!values.price)\n            errors.price = 'Enter a meal price!';\n        else if (values.price === '' || !re.test(values.price))\n            errors.price = 'Enter only numbers into price!';\n\n        if (!moment(values.creationDate).isValid())\n            errors.creationDate = 'Enter a valid date!';\n        return errors;\n    }\n\n    onSubmit = (values) => {\n        console.log(values);\n        if(this.state.action==='update'){\n            MealDataService.updateMeal(this.state.meal.code, values)\n                .then(response => {\n                    this.props.history.push(`/meallist`);\n                })\n        }else{\n            MealDataService.createMeal(values)\n                .then(response => {\n                    this.props.history.push(`/meallist`);\n                })\n        }\n    }\n\n    componentDidMount = () => {\n        if (this.props.match.params.code === \"new\") {\n            this.setState({action: 'create'});\n            return;\n        }\n\n        MealDataService.retrieveMeal(this.props.match.params.code)\n            .then(response => {\n                console.log(response);\n                this.setState({meal: response.data});\n            });\n\n    };\n\n    render() {\n        let {code, name, price, photo, detail, campaign, creationDate} = this.state.meal;\n\n        function setFieldValue(checked) {\n            campaign = checked;\n        }\n\n        return (\n            <div>\n                <h1>Meal</h1>\n                <div className=\"container\">\n                    <Formik onSubmit={this.onSubmit}\n                            validate={this.validate}\n                            initialValues={{code, name, price, photo, detail, campaign, creationDate}}\n                            enableReinitialize={true}\n                    >\n                        {\n                            (props) => (\n                                <Form>\n                                    <ErrorMessage name=\"code\" component=\"div\" className=\"alert alert-warning\"/>\n                                    <ErrorMessage name=\"name\" component=\"div\" className=\"alert alert-warning\"/>\n                                    <ErrorMessage name=\"price\" component=\"div\" className=\"alert alert-warning\"/>\n                                    <ErrorMessage name=\"creationDate\" component=\"div\" className=\"alert alert-warning\"/>\n                                    <fieldset className=\"form-group\">\n                                        <label>Code</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"code\"/>\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Name</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"name\"/>\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Price</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"price\"/>\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Photo</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"photo\"/>\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Detail</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"detail\"/>\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Creation Date</label>\n                                        <Field className=\"form-control\" type=\"date\" name=\"creationDate\"/>\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Campaign?</label>\n                                        <Field className=\"form-control\" type=\"checkbox\" name=\"campaign\"\n                                               onChange={event => setFieldValue(event.target.checked)} checked={campaign}/>\n                                    </fieldset>\n                                    <button className=\"btn btn-success\" type=\"submit\">Save</button>\n                                </Form>\n                            )\n                        }\n                    </Formik>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MealComponent;"]},"metadata":{},"sourceType":"module"}