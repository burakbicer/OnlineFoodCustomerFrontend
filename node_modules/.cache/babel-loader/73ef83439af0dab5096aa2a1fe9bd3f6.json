{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\uygulama\\\\onlinefood-customer-app-frontend\\\\src\\\\components\\\\onlinefood\\\\MealList.js\";\nimport React, { Component } from 'react';\nimport MealDataService from \"../../api/MealDataService\";\nimport AuthenticationService from \"./AuthenticationService\";\nimport OrdersService from \"../../api/OrdersService\";\n\nclass MealList extends Component {\n  constructor() {\n    super();\n\n    this.refreshMeals = () => {\n      MealDataService.retrieveAllMeals().then(response => {\n        this.setState({\n          selectableMeals: response.data\n        });\n      });\n    };\n\n    this.addSelectedMeals = code => {\n      let selectedMeals = this.state.selectedMeals;\n      let selectableMeals = this.state.selectableMeals;\n\n      for (let i = 0; i < selectableMeals.length; i++) {\n        if (selectableMeals[i].code === code) {\n          selectedMeals.push(selectableMeals[i]);\n          selectableMeals.splice(i, 1);\n        }\n      }\n\n      this.setState({\n        selectedMeals: selectedMeals,\n        selectableMeals: selectableMeals\n      });\n    };\n\n    this.removeFromSelectedMeals = code => {\n      let selectedMeals = this.state.selectedMeals;\n      let selectableMeals = this.state.selectableMeals;\n\n      for (let i = 0; i < selectedMeals.length; i++) {\n        if (selectedMeals[i].code === code) {\n          selectableMeals.push(selectedMeals[i]);\n          selectedMeals.splice(i, 1);\n        }\n      }\n\n      this.setState({\n        selectedMeals: selectedMeals,\n        selectableMeals: selectableMeals\n      });\n    };\n\n    this.saveSelectedMeals = () => {\n      let selectedMeals = this.state.selectedMeals;\n      let selectedMealsCodes = [];\n\n      for (let i = 0; i < selectedMeals.length; i++) {\n        selectedMealsCodes.push(selectedMeals[i].code);\n      }\n\n      if (selectedMealsCodes.length === 0) {\n        alert(\"You must select at least one item...\");\n      } else {\n        let postOrderObject = {\n          \"username\": sessionStorage.getItem(\"authenticatedUser\"),\n          \"mealId\": selectedMealsCodes\n        };\n        OrdersService.createOrder(postOrderObject).then(response => {\n          this.props.history.push(`/orderHistory`);\n        });\n      }\n    };\n\n    this.state = {\n      message: null,\n      selectableMeals: [],\n      selectedMeals: []\n    }; //this.refreshPage();\n\n    AuthenticationService.setupAxiosInterceptorsForSavedToken(); //this.forceUpdate();\n  }\n\n  componentDidMount() {\n    //this.forceUpdate();\n    this.refreshMeals(); //this.refreshPage();\n    //this.context.refresh();\n  }\n\n  // refreshPage(){window.location.reload(false);};\n  //refreshPage(){window.location.reload();};\n  //refreshPage(){ window.parent.location = window.parent.location.href };\n  refreshPage() {\n    window.location.reload();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"SELECTABLE MEALS\"), this.state.message != null && React.createElement(\"div\", {\n      className: \"alert alert-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.state.message), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"CODE\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"NAME\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"PHOTO\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"PRICE\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"DETAIL\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"ADD\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.state.selectableMeals.map(meal => React.createElement(\"tr\", {\n      key: meal.code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, meal.code), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, meal.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: meal.photo,\n      width: \"200\",\n      height: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, meal.price.toString()), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, meal.detail), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.addSelectedMeals(meal.code),\n      onClick: () => window.location.reload(false),\n      className: \"btn btn-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"ADD\"))))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"SELECTED MEALS\"), this.state.message != null && React.createElement(\"div\", {\n      className: \"alert alert-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.state.message), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"CODE\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"NAME\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"PRICE\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"DETAIL\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.state.selectedMeals.map(meal => React.createElement(\"tr\", {\n      key: meal.code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, meal.code), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, meal.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, meal.price.toString()), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, meal.detail), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.removeFromSelectedMeals(meal.code),\n      onClick: () => window.location.reload(false),\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"REMOVE\"))))))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.saveSelectedMeals(),\n      className: \"btn btn-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Save Changes\")));\n  }\n\n}\n\nexport default MealList;","map":{"version":3,"sources":["C:/Users/Asus/Desktop/uygulama/onlinefood-customer-app-frontend/src/components/onlinefood/MealList.js"],"names":["React","Component","MealDataService","AuthenticationService","OrdersService","MealList","constructor","refreshMeals","retrieveAllMeals","then","response","setState","selectableMeals","data","addSelectedMeals","code","selectedMeals","state","i","length","push","splice","removeFromSelectedMeals","saveSelectedMeals","selectedMealsCodes","alert","postOrderObject","sessionStorage","getItem","createOrder","props","history","message","setupAxiosInterceptorsForSavedToken","componentDidMount","refreshPage","window","location","reload","render","map","meal","name","photo","price","toString","detail"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport MealDataService from \"../../api/MealDataService\";\nimport AuthenticationService from \"./AuthenticationService\";\nimport OrdersService from \"../../api/OrdersService\";\n\nclass MealList extends Component {\n    constructor() {\n        super();\n        this.state = {\n            message: null,\n            selectableMeals: [],\n            selectedMeals: []\n\n        };\n        //this.refreshPage();\n        AuthenticationService.setupAxiosInterceptorsForSavedToken();\n        //this.forceUpdate();\n    }\n\n    componentDidMount() {\n        //this.forceUpdate();\n        this.refreshMeals();\n        //this.refreshPage();\n        //this.context.refresh();\n    };\n\n    \n\n    refreshMeals = () => {\n\n        MealDataService.retrieveAllMeals()\n\n            .then(response => {\n                this.setState({selectableMeals: response.data});\n            })\n    };\n   // refreshPage(){window.location.reload(false);};\n    //refreshPage(){window.location.reload();};\n   //refreshPage(){ window.parent.location = window.parent.location.href };\n\n    refreshPage() {\n        window.location.reload();\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>SELECTABLE MEALS</h1>\n                {this.state.message != null && <div className=\"alert alert-success\">{this.state.message}</div>}\n                <div className=\"container\">\n                    <table className=\"table\">\n                        <thead>\n                        <tr>\n                            <th>CODE</th>\n                            <th>NAME</th>\n                            <th>PHOTO</th>\n                            <th>PRICE</th>\n                            <th>DETAIL</th>\n                            <th>ADD</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {\n                            this.state.selectableMeals.map(\n                                meal =>\n                                    <tr key={meal.code}>\n                                        <td>{meal.code}</td>\n                                        <td>{meal.name}</td>\n                                        <td><img src={meal.photo} width=\"200\" height=\"100\"/></td>\n                                        <td>{meal.price.toString()}</td>\n                                        <td>{meal.detail}</td>\n                                        <td>\n                                            <button onClick={() => this.addSelectedMeals(meal.code)}\n                                                    onClick={() => window.location.reload(false)}\n                                                    className=\"btn btn-success\">ADD\n                                            </button>\n                                        </td>\n                                    </tr>\n                            )\n                        }\n                        </tbody>\n                    </table>\n                </div>\n\n                <br/>\n                <h1>SELECTED MEALS</h1>\n                {this.state.message != null && <div className=\"alert alert-success\">{this.state.message}</div>}\n                <div className=\"container\">\n                    <table className=\"table\">\n                        <thead>\n                        <tr>\n                            <th>CODE</th>\n                            <th>NAME</th>\n                            <th>PRICE</th>\n                            <th>DETAIL</th>\n\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {\n                            this.state.selectedMeals.map(\n                                meal =>\n                                    <tr key={meal.code}>\n                                        <td>{meal.code}</td>\n                                        <td>{meal.name}</td>\n                                        <td>{meal.price.toString()}</td>\n                                        <td>{meal.detail}</td>\n                                        <td>\n                                            <button onClick={() => this.removeFromSelectedMeals(meal.code)}\n                                                    onClick={() => window.location.reload(false)}\n                                                    className=\"btn btn-danger\">REMOVE\n                                            </button>\n                                        </td>\n                                    </tr>\n                            )\n                        }\n                        </tbody>\n                    </table>\n                </div>\n\n\n                <div>\n                    <button onClick={() => this.saveSelectedMeals()}\n                            className=\"btn btn-success\">Save Changes\n                    </button>\n                </div>\n            </div>\n        );\n    }\n\n\n    addSelectedMeals = (code) => {\n        let selectedMeals = this.state.selectedMeals;\n        let selectableMeals = this.state.selectableMeals;\n        for (let i = 0; i < selectableMeals.length; i++) {\n            if (selectableMeals[i].code === code) {\n                selectedMeals.push(selectableMeals[i]);\n                selectableMeals.splice(i, 1);\n            }\n        }\n        this.setState({selectedMeals: selectedMeals, selectableMeals: selectableMeals});\n    };\n\n\n    removeFromSelectedMeals = (code) => {\n        let selectedMeals = this.state.selectedMeals;\n        let selectableMeals = this.state.selectableMeals;\n        for (let i = 0; i < selectedMeals.length; i++) {\n            if (selectedMeals[i].code === code) {\n                selectableMeals.push(selectedMeals[i]);\n                selectedMeals.splice(i, 1);\n            }\n        }\n        this.setState({selectedMeals: selectedMeals, selectableMeals: selectableMeals});\n    };\n\n\n    saveSelectedMeals = () => {\n        let selectedMeals = this.state.selectedMeals;\n        let selectedMealsCodes = [];\n\n\n        for (let i = 0; i < selectedMeals.length; i++) {\n            selectedMealsCodes.push(selectedMeals[i].code);\n        }\n\n        if(selectedMealsCodes.length===0){\n            alert(\"You must select at least one item...\");\n        }else{\n            let postOrderObject = {\n                \"username\": sessionStorage.getItem(\"authenticatedUser\"),\n                \"mealId\": selectedMealsCodes\n            };\n\n            OrdersService.createOrder(postOrderObject).then(response => {\n                this.props.history.push(`/orderHistory`);\n            });\n        }\n    };\n}\n\nexport default MealList;\n"]},"metadata":{},"sourceType":"module"}